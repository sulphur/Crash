// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 46;
	objects = {

/* Begin PBXBuildFile section */
		01483E0C18DC616800F3C298 /* srv_mosq.c in Sources */ = {isa = PBXBuildFile; fileRef = 01483E0918DC616800F3C298 /* srv_mosq.c */; };
		01483E0D18DC616800F3C298 /* tls_mosq.c in Sources */ = {isa = PBXBuildFile; fileRef = 01483E0A18DC616800F3C298 /* tls_mosq.c */; };
		01483E0E18DC616800F3C298 /* tls_mosq.h in Headers */ = {isa = PBXBuildFile; fileRef = 01483E0B18DC616800F3C298 /* tls_mosq.h */; };
		01BAEDE118DBB2AE00929313 /* libcrypto.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 01BAEDDF18DBB2AE00929313 /* libcrypto.a */; };
		01BAEDE218DBB2AE00929313 /* libssl.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 01BAEDE018DBB2AE00929313 /* libssl.a */; };
		628B977C1757C9E900D82061 /* InfoPlist.strings in Resources */ = {isa = PBXBuildFile; fileRef = 62C1856317574452009095DF /* InfoPlist.strings */; };
		629109211757B0F200977B9B /* config.h in Headers */ = {isa = PBXBuildFile; fileRef = 629109201757B0F200977B9B /* config.h */; };
		62C1855F17574452009095DF /* Foundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 62C1855E17574452009095DF /* Foundation.framework */; };
		62C1858817574491009095DF /* dummypthread.h in Headers */ = {isa = PBXBuildFile; fileRef = 62C1856D17574491009095DF /* dummypthread.h */; };
		62C1858917574491009095DF /* logging_mosq.c in Sources */ = {isa = PBXBuildFile; fileRef = 62C1856E17574491009095DF /* logging_mosq.c */; };
		62C1858A17574491009095DF /* logging_mosq.h in Headers */ = {isa = PBXBuildFile; fileRef = 62C1856F17574491009095DF /* logging_mosq.h */; };
		62C1858B17574491009095DF /* memory_mosq.c in Sources */ = {isa = PBXBuildFile; fileRef = 62C1857017574491009095DF /* memory_mosq.c */; };
		62C1858C17574491009095DF /* memory_mosq.h in Headers */ = {isa = PBXBuildFile; fileRef = 62C1857117574491009095DF /* memory_mosq.h */; };
		62C1858D17574491009095DF /* messages_mosq.c in Sources */ = {isa = PBXBuildFile; fileRef = 62C1857217574491009095DF /* messages_mosq.c */; };
		62C1858E17574491009095DF /* messages_mosq.h in Headers */ = {isa = PBXBuildFile; fileRef = 62C1857317574491009095DF /* messages_mosq.h */; };
		62C1858F17574491009095DF /* mosquitto_internal.h in Headers */ = {isa = PBXBuildFile; fileRef = 62C1857417574491009095DF /* mosquitto_internal.h */; };
		62C1859017574491009095DF /* mosquitto.c in Sources */ = {isa = PBXBuildFile; fileRef = 62C1857517574491009095DF /* mosquitto.c */; };
		62C1859117574491009095DF /* mosquitto.h in Headers */ = {isa = PBXBuildFile; fileRef = 62C1857617574491009095DF /* mosquitto.h */; settings = {ATTRIBUTES = (Public, ); }; };
		62C1859217574491009095DF /* mqtt3_protocol.h in Headers */ = {isa = PBXBuildFile; fileRef = 62C1857717574491009095DF /* mqtt3_protocol.h */; };
		62C1859317574491009095DF /* net_mosq.c in Sources */ = {isa = PBXBuildFile; fileRef = 62C1857817574491009095DF /* net_mosq.c */; };
		62C1859417574491009095DF /* net_mosq.h in Headers */ = {isa = PBXBuildFile; fileRef = 62C1857917574491009095DF /* net_mosq.h */; };
		62C1859517574491009095DF /* read_handle_client.c in Sources */ = {isa = PBXBuildFile; fileRef = 62C1857A17574491009095DF /* read_handle_client.c */; };
		62C1859617574491009095DF /* read_handle_shared.c in Sources */ = {isa = PBXBuildFile; fileRef = 62C1857B17574491009095DF /* read_handle_shared.c */; };
		62C1859717574491009095DF /* read_handle.c in Sources */ = {isa = PBXBuildFile; fileRef = 62C1857C17574491009095DF /* read_handle.c */; };
		62C1859817574491009095DF /* read_handle.h in Headers */ = {isa = PBXBuildFile; fileRef = 62C1857D17574491009095DF /* read_handle.h */; };
		62C1859917574491009095DF /* send_client_mosq.c in Sources */ = {isa = PBXBuildFile; fileRef = 62C1857E17574491009095DF /* send_client_mosq.c */; };
		62C1859A17574491009095DF /* send_mosq.c in Sources */ = {isa = PBXBuildFile; fileRef = 62C1857F17574491009095DF /* send_mosq.c */; };
		62C1859B17574491009095DF /* send_mosq.h in Headers */ = {isa = PBXBuildFile; fileRef = 62C1858017574491009095DF /* send_mosq.h */; };
		62C1859C17574491009095DF /* thread_mosq.c in Sources */ = {isa = PBXBuildFile; fileRef = 62C1858117574491009095DF /* thread_mosq.c */; };
		62C1859D17574491009095DF /* time_mosq.c in Sources */ = {isa = PBXBuildFile; fileRef = 62C1858217574491009095DF /* time_mosq.c */; };
		62C1859E17574491009095DF /* time_mosq.h in Headers */ = {isa = PBXBuildFile; fileRef = 62C1858317574491009095DF /* time_mosq.h */; };
		62C1859F17574491009095DF /* util_mosq.c in Sources */ = {isa = PBXBuildFile; fileRef = 62C1858417574491009095DF /* util_mosq.c */; };
		62C185A017574491009095DF /* util_mosq.h in Headers */ = {isa = PBXBuildFile; fileRef = 62C1858517574491009095DF /* util_mosq.h */; };
		62C185A117574491009095DF /* will_mosq.c in Sources */ = {isa = PBXBuildFile; fileRef = 62C1858617574491009095DF /* will_mosq.c */; };
		62C185A217574491009095DF /* will_mosq.h in Headers */ = {isa = PBXBuildFile; fileRef = 62C1858717574491009095DF /* will_mosq.h */; };
/* End PBXBuildFile section */

/* Begin PBXFileReference section */
		01483E0918DC616800F3C298 /* srv_mosq.c */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.c; path = srv_mosq.c; sourceTree = "<group>"; };
		01483E0A18DC616800F3C298 /* tls_mosq.c */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.c; path = tls_mosq.c; sourceTree = "<group>"; };
		01483E0B18DC616800F3C298 /* tls_mosq.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = tls_mosq.h; sourceTree = "<group>"; };
		01BAEDDF18DBB2AE00929313 /* libcrypto.a */ = {isa = PBXFileReference; lastKnownFileType = archive.ar; path = libcrypto.a; sourceTree = "<group>"; };
		01BAEDE018DBB2AE00929313 /* libssl.a */ = {isa = PBXFileReference; lastKnownFileType = archive.ar; path = libssl.a; sourceTree = "<group>"; };
		629109201757B0F200977B9B /* config.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = config.h; sourceTree = "<group>"; };
		62C1855B17574452009095DF /* Mosquitto.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework.static; includeInIndex = 0; path = Mosquitto.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		62C1855E17574452009095DF /* Foundation.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = Foundation.framework; path = System/Library/Frameworks/Foundation.framework; sourceTree = SDKROOT; };
		62C1856217574452009095DF /* Mosquitto-Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = "Mosquitto-Info.plist"; sourceTree = "<group>"; };
		62C1856417574452009095DF /* en */ = {isa = PBXFileReference; lastKnownFileType = text.plist.strings; name = en; path = en.lproj/InfoPlist.strings; sourceTree = "<group>"; };
		62C1856617574452009095DF /* Mosquitto-Prefix.pch */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = "Mosquitto-Prefix.pch"; sourceTree = "<group>"; };
		62C1856D17574491009095DF /* dummypthread.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = dummypthread.h; path = ../lib/dummypthread.h; sourceTree = "<group>"; };
		62C1856E17574491009095DF /* logging_mosq.c */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.c; name = logging_mosq.c; path = ../lib/logging_mosq.c; sourceTree = "<group>"; };
		62C1856F17574491009095DF /* logging_mosq.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = logging_mosq.h; path = ../lib/logging_mosq.h; sourceTree = "<group>"; };
		62C1857017574491009095DF /* memory_mosq.c */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.c; name = memory_mosq.c; path = ../lib/memory_mosq.c; sourceTree = "<group>"; };
		62C1857117574491009095DF /* memory_mosq.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = memory_mosq.h; path = ../lib/memory_mosq.h; sourceTree = "<group>"; };
		62C1857217574491009095DF /* messages_mosq.c */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.c; name = messages_mosq.c; path = ../lib/messages_mosq.c; sourceTree = "<group>"; };
		62C1857317574491009095DF /* messages_mosq.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = messages_mosq.h; path = ../lib/messages_mosq.h; sourceTree = "<group>"; };
		62C1857417574491009095DF /* mosquitto_internal.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = mosquitto_internal.h; path = ../lib/mosquitto_internal.h; sourceTree = "<group>"; };
		62C1857517574491009095DF /* mosquitto.c */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.c; name = mosquitto.c; path = ../lib/mosquitto.c; sourceTree = "<group>"; };
		62C1857617574491009095DF /* mosquitto.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = mosquitto.h; path = ../lib/mosquitto.h; sourceTree = "<group>"; };
		62C1857717574491009095DF /* mqtt3_protocol.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = mqtt3_protocol.h; path = ../lib/mqtt3_protocol.h; sourceTree = "<group>"; };
		62C1857817574491009095DF /* net_mosq.c */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.c; name = net_mosq.c; path = ../lib/net_mosq.c; sourceTree = "<group>"; };
		62C1857917574491009095DF /* net_mosq.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = net_mosq.h; path = ../lib/net_mosq.h; sourceTree = "<group>"; };
		62C1857A17574491009095DF /* read_handle_client.c */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.c; name = read_handle_client.c; path = ../lib/read_handle_client.c; sourceTree = "<group>"; };
		62C1857B17574491009095DF /* read_handle_shared.c */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.c; name = read_handle_shared.c; path = ../lib/read_handle_shared.c; sourceTree = "<group>"; };
		62C1857C17574491009095DF /* read_handle.c */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.c; name = read_handle.c; path = ../lib/read_handle.c; sourceTree = "<group>"; };
		62C1857D17574491009095DF /* read_handle.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = read_handle.h; path = ../lib/read_handle.h; sourceTree = "<group>"; };
		62C1857E17574491009095DF /* send_client_mosq.c */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.c; name = send_client_mosq.c; path = ../lib/send_client_mosq.c; sourceTree = "<group>"; };
		62C1857F17574491009095DF /* send_mosq.c */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.c; name = send_mosq.c; path = ../lib/send_mosq.c; sourceTree = "<group>"; };
		62C1858017574491009095DF /* send_mosq.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = send_mosq.h; path = ../lib/send_mosq.h; sourceTree = "<group>"; };
		62C1858117574491009095DF /* thread_mosq.c */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.c; name = thread_mosq.c; path = ../lib/thread_mosq.c; sourceTree = "<group>"; };
		62C1858217574491009095DF /* time_mosq.c */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.c; name = time_mosq.c; path = ../lib/time_mosq.c; sourceTree = "<group>"; };
		62C1858317574491009095DF /* time_mosq.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = time_mosq.h; path = ../lib/time_mosq.h; sourceTree = "<group>"; };
		62C1858417574491009095DF /* util_mosq.c */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.c; name = util_mosq.c; path = ../lib/util_mosq.c; sourceTree = "<group>"; };
		62C1858517574491009095DF /* util_mosq.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = util_mosq.h; path = ../lib/util_mosq.h; sourceTree = "<group>"; };
		62C1858617574491009095DF /* will_mosq.c */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.c; name = will_mosq.c; path = ../lib/will_mosq.c; sourceTree = "<group>"; };
		62C1858717574491009095DF /* will_mosq.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = will_mosq.h; path = ../lib/will_mosq.h; sourceTree = "<group>"; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		62C1855517574452009095DF /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				01BAEDE118DBB2AE00929313 /* libcrypto.a in Frameworks */,
				62C1855F17574452009095DF /* Foundation.framework in Frameworks */,
				01BAEDE218DBB2AE00929313 /* libssl.a in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		62C1854E17574452009095DF = {
			isa = PBXGroup;
			children = (
				62C1856117574452009095DF /* Supporting Files */,
				62C1856C17574468009095DF /* libmosquitto */,
				62C1855D17574452009095DF /* Frameworks */,
				62C1855C17574452009095DF /* Products */,
			);
			sourceTree = "<group>";
		};
		62C1855C17574452009095DF /* Products */ = {
			isa = PBXGroup;
			children = (
				62C1855B17574452009095DF /* Mosquitto.framework */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		62C1855D17574452009095DF /* Frameworks */ = {
			isa = PBXGroup;
			children = (
				01BAEDDF18DBB2AE00929313 /* libcrypto.a */,
				01BAEDE018DBB2AE00929313 /* libssl.a */,
				62C1855E17574452009095DF /* Foundation.framework */,
			);
			name = Frameworks;
			sourceTree = "<group>";
		};
		62C1856117574452009095DF /* Supporting Files */ = {
			isa = PBXGroup;
			children = (
				629109201757B0F200977B9B /* config.h */,
				62C1856217574452009095DF /* Mosquitto-Info.plist */,
				62C1856317574452009095DF /* InfoPlist.strings */,
				62C1856617574452009095DF /* Mosquitto-Prefix.pch */,
			);
			name = "Supporting Files";
			sourceTree = "<group>";
		};
		62C1856C17574468009095DF /* libmosquitto */ = {
			isa = PBXGroup;
			children = (
				01483E0918DC616800F3C298 /* srv_mosq.c */,
				01483E0A18DC616800F3C298 /* tls_mosq.c */,
				01483E0B18DC616800F3C298 /* tls_mosq.h */,
				62C1856D17574491009095DF /* dummypthread.h */,
				62C1856E17574491009095DF /* logging_mosq.c */,
				62C1856F17574491009095DF /* logging_mosq.h */,
				62C1857017574491009095DF /* memory_mosq.c */,
				62C1857117574491009095DF /* memory_mosq.h */,
				62C1857217574491009095DF /* messages_mosq.c */,
				62C1857317574491009095DF /* messages_mosq.h */,
				62C1857417574491009095DF /* mosquitto_internal.h */,
				62C1857517574491009095DF /* mosquitto.c */,
				62C1857617574491009095DF /* mosquitto.h */,
				62C1857717574491009095DF /* mqtt3_protocol.h */,
				62C1857817574491009095DF /* net_mosq.c */,
				62C1857917574491009095DF /* net_mosq.h */,
				62C1857A17574491009095DF /* read_handle_client.c */,
				62C1857B17574491009095DF /* read_handle_shared.c */,
				62C1857C17574491009095DF /* read_handle.c */,
				62C1857D17574491009095DF /* read_handle.h */,
				62C1857E17574491009095DF /* send_client_mosq.c */,
				62C1857F17574491009095DF /* send_mosq.c */,
				62C1858017574491009095DF /* send_mosq.h */,
				62C1858117574491009095DF /* thread_mosq.c */,
				62C1858217574491009095DF /* time_mosq.c */,
				62C1858317574491009095DF /* time_mosq.h */,
				62C1858417574491009095DF /* util_mosq.c */,
				62C1858517574491009095DF /* util_mosq.h */,
				62C1858617574491009095DF /* will_mosq.c */,
				62C1858717574491009095DF /* will_mosq.h */,
			);
			name = libmosquitto;
			path = ../lib;
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXHeadersBuildPhase section */
		62C1855617574452009095DF /* Headers */ = {
			isa = PBXHeadersBuildPhase;
			buildActionMask = 2147483647;
			files = (
				62C1859117574491009095DF /* mosquitto.h in Headers */,
				62C1858817574491009095DF /* dummypthread.h in Headers */,
				62C1858A17574491009095DF /* logging_mosq.h in Headers */,
				62C1858C17574491009095DF /* memory_mosq.h in Headers */,
				62C1858E17574491009095DF /* messages_mosq.h in Headers */,
				62C1858F17574491009095DF /* mosquitto_internal.h in Headers */,
				62C1859217574491009095DF /* mqtt3_protocol.h in Headers */,
				62C1859417574491009095DF /* net_mosq.h in Headers */,
				62C1859817574491009095DF /* read_handle.h in Headers */,
				01483E0E18DC616800F3C298 /* tls_mosq.h in Headers */,
				62C1859B17574491009095DF /* send_mosq.h in Headers */,
				62C1859E17574491009095DF /* time_mosq.h in Headers */,
				62C185A017574491009095DF /* util_mosq.h in Headers */,
				62C185A217574491009095DF /* will_mosq.h in Headers */,
				629109211757B0F200977B9B /* config.h in Headers */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXHeadersBuildPhase section */

/* Begin PBXNativeTarget section */
		62C1855A17574452009095DF /* Mosquitto */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 62C1856917574452009095DF /* Build configuration list for PBXNativeTarget "Mosquitto" */;
			buildPhases = (
				62C1855317574452009095DF /* ShellScript */,
				62C1855417574452009095DF /* Sources */,
				62C1855517574452009095DF /* Frameworks */,
				62C1855617574452009095DF /* Headers */,
				62C1855717574452009095DF /* Resources */,
				62C1855817574452009095DF /* ShellScript */,
				62C1855917574452009095DF /* ShellScript */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = Mosquitto;
			productName = MosquittoClient;
			productReference = 62C1855B17574452009095DF /* Mosquitto.framework */;
			productType = "com.apple.product-type.framework.static";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		62C1854F17574452009095DF /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastUpgradeCheck = 0510;
				ORGANIZATIONNAME = "Roger Light";
			};
			buildConfigurationList = 62C1855217574452009095DF /* Build configuration list for PBXProject "Mosquitto" */;
			compatibilityVersion = "Xcode 3.2";
			developmentRegion = English;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
			);
			mainGroup = 62C1854E17574452009095DF;
			productRefGroup = 62C1855C17574452009095DF /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				62C1855A17574452009095DF /* Mosquitto */,
			);
		};
/* End PBXProject section */

/* Begin PBXResourcesBuildPhase section */
		62C1855717574452009095DF /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				628B977C1757C9E900D82061 /* InfoPlist.strings in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXResourcesBuildPhase section */

/* Begin PBXShellScriptBuildPhase section */
		62C1855317574452009095DF /* ShellScript */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\n\nset +u\nif [[ $UFW_MASTER_SCRIPT_RUNNING ]]\nthen\n    # Nothing for the slave script to do\n    exit 0\nfi\nset -u\n\nif [[ \"$SDK_NAME\" =~ ([A-Za-z]+) ]]\nthen\n    UFW_SDK_PLATFORM=${BASH_REMATCH[1]}\nelse\n    echo \"Could not find platform name from SDK_NAME: $SDK_NAME\"\n    exit 1\nfi\n\nif [[ \"$SDK_NAME\" =~ ([0-9]+.*$) ]]\nthen\n\tUFW_SDK_VERSION=${BASH_REMATCH[1]}\nelse\n    echo \"Could not find sdk version  from SDK_NAME: $SDK_NAME\"\n    exit 1\nfi\n\nif [[ \"$UFW_SDK_PLATFORM\" = \"iphoneos\" ]]\nthen\n    UFW_OTHER_PLATFORM=iphonesimulator\nelse\n    UFW_OTHER_PLATFORM=iphoneos\nfi\n\nif [[ \"$BUILT_PRODUCTS_DIR\" =~ (.*)$UFW_SDK_PLATFORM$ ]]\nthen\n    UFW_OTHER_BUILT_PRODUCTS_DIR=\"${BASH_REMATCH[1]}${UFW_OTHER_PLATFORM}\"\nelse\n    echo \"Could not find $UFW_SDK_PLATFORM in $BUILT_PRODUCTS_DIR\"\n    exit 1\nfi\n\nONLY_ACTIVE_PLATFORM=${ONLY_ACTIVE_PLATFORM:-$ONLY_ACTIVE_ARCH}\n\n# Short-circuit if all binaries are up to date\n\nif [[ -f \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" ]] && \\\n   [[ -f \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]] && \\\n   [[ ! \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" -nt \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]] && \\\n  ([[ \"${ONLY_ACTIVE_PLATFORM}\" == \"YES\" ]] || \\\n    ([[ -f \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" ]] && \\\n     [[ -f \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]] && \\\n     [[ ! \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" -nt \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]]\n    )\n  )\nthen\n    exit 0\nfi\n\n\n# Clean other platform if needed\n\nif [[ ! -f \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" ]] && [[ \"${ONLY_ACTIVE_PLATFORM}\" != \"YES\" ]]\nthen\n\techo \"Platform \\\"$UFW_SDK_PLATFORM\\\" was cleaned recently. Cleaning \\\"$UFW_OTHER_PLATFORM\\\" as well\"\n\techo xcodebuild -project \"${PROJECT_FILE_PATH}\" -target \"${TARGET_NAME}\" -configuration \"${CONFIGURATION}\" -sdk ${UFW_OTHER_PLATFORM}${UFW_SDK_VERSION} BUILD_DIR=\"${BUILD_DIR}\" CONFIGURATION_TEMP_DIR=\"${PROJECT_TEMP_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\" clean\n\txcodebuild -project \"${PROJECT_FILE_PATH}\" -target \"${TARGET_NAME}\" -configuration \"${CONFIGURATION}\" -sdk ${UFW_OTHER_PLATFORM}${UFW_SDK_VERSION} BUILD_DIR=\"${BUILD_DIR}\" CONFIGURATION_TEMP_DIR=\"${PROJECT_TEMP_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\" clean\nfi\n\n\n# Make sure we are building from fresh binaries\n\nrm -rf \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\"\nrm -rf \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework\"\n\nif [[ \"${ONLY_ACTIVE_PLATFORM}\" != \"YES\" ]]\nthen\n    rm -rf \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\"\n    rm -rf \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework\"\nfi\n";
		};
		62C1855817574452009095DF /* ShellScript */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "HEADERS_ROOT=$SRCROOT/$PRODUCT_NAME\nFRAMEWORK_HEADERS_DIR=\"$BUILT_PRODUCTS_DIR/$WRAPPER_NAME/Versions/$FRAMEWORK_VERSION/Headers\"\n\n## only header files expected at this point\nPUBLIC_HEADERS=$(find $FRAMEWORK_HEADERS_DIR/. -not -type d 2> /dev/null | sed -e \"s@.*/@@g\")\n\nFIND_OPTS=\"\"\nfor PUBLIC_HEADER in $PUBLIC_HEADERS; do\n  if [ -n \"$FIND_OPTS\" ]; then\n    FIND_OPTS=\"$FIND_OPTS -o\"\n  fi\n  FIND_OPTS=\"$FIND_OPTS -name '$PUBLIC_HEADER'\"\ndone\n\nif [ -n \"$FIND_OPTS\" ]; then\n  for ORIG_HEADER in $(eval \"find $HEADERS_ROOT/. $FIND_OPTS\" 2> /dev/null | sed -e \"s@^$HEADERS_ROOT/./@@g\"); do\n    PUBLIC_HEADER=$(basename $ORIG_HEADER)\n    RELATIVE_PATH=$(dirname $ORIG_HEADER)\n    if [ -e $FRAMEWORK_HEADERS_DIR/$PUBLIC_HEADER ]; then\n      mkdir -p \"$FRAMEWORK_HEADERS_DIR/$RELATIVE_PATH\"\n      mv \"$FRAMEWORK_HEADERS_DIR/$PUBLIC_HEADER\" \"$FRAMEWORK_HEADERS_DIR/$RELATIVE_PATH/$PUBLIC_HEADER\"\n    fi\n  done\nfi\n";
		};
		62C1855917574452009095DF /* ShellScript */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\n\nset +u\nif [[ $UFW_MASTER_SCRIPT_RUNNING ]]\nthen\n    # Nothing for the slave script to do\n    exit 0\nfi\nset -u\nexport UFW_MASTER_SCRIPT_RUNNING=1\n\n\n# Functions\n\n## List files in the specified directory, storing to the specified array.\n#\n# @param $1 The path to list\n# @param $2 The name of the array to fill\n#\n##\nlist_files ()\n{\n    filelist=$(ls \"$1\")\n    while read line\n    do\n        eval \"$2[\\${#$2[*]}]=\\\"\\$line\\\"\"\n    done <<< \"$filelist\"\n}\n\n\n# Sanity check\n\nif [[ ! -f \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" ]]\nthen\n    echo \"Framework target \\\"${TARGET_NAME}\\\" had no source files to build from. Make sure your source files have the correct target membership\"\n    exit 1\nfi\n\n\n# Gather information\n\nif [[ \"$SDK_NAME\" =~ ([A-Za-z]+) ]]\nthen\n    UFW_SDK_PLATFORM=${BASH_REMATCH[1]}\nelse\n    echo \"Could not find platform name from SDK_NAME: $SDK_NAME\"\n    exit 1\nfi\n\nif [[ \"$SDK_NAME\" =~ ([0-9]+.*$) ]]\nthen\n    UFW_SDK_VERSION=${BASH_REMATCH[1]}\nelse\n    echo \"Could not find sdk version from SDK_NAME: $SDK_NAME\"\n    exit 1\nfi\n\nif [[ \"$UFW_SDK_PLATFORM\" = \"iphoneos\" ]]\nthen\n    UFW_OTHER_PLATFORM=iphonesimulator\nelse\n    UFW_OTHER_PLATFORM=iphoneos\nfi\n\nif [[ \"$BUILT_PRODUCTS_DIR\" =~ (.*)$UFW_SDK_PLATFORM$ ]]\nthen\n    UFW_OTHER_BUILT_PRODUCTS_DIR=\"${BASH_REMATCH[1]}${UFW_OTHER_PLATFORM}\"\nelse\n    echo \"Could not find $UFW_SDK_PLATFORM in $BUILT_PRODUCTS_DIR\"\n    exit 1\nfi\n\nONLY_ACTIVE_PLATFORM=${ONLY_ACTIVE_PLATFORM:-$ONLY_ACTIVE_ARCH}\n\n# Short-circuit if all binaries are up to date.\n# We already checked the other platform in the prerun script.\n\nif [[ -f \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" ]] && [[ -f \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]] && [[ ! \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" -nt \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]]\nthen\n    exit 0\nfi\n\nif [ \"${ONLY_ACTIVE_PLATFORM}\" == \"YES\" ]\nthen\n    echo \"ONLY_ACTIVE_PLATFORM=${ONLY_ACTIVE_PLATFORM}: Skipping other platform build\"\nelse\n    # Make sure the other platform gets built\n    \n    echo \"Build other platform\"\n    \n    echo xcodebuild -project \"${PROJECT_FILE_PATH}\" -target \"${TARGET_NAME}\" -configuration \"${CONFIGURATION}\" -sdk ${UFW_OTHER_PLATFORM}${UFW_SDK_VERSION} BUILD_DIR=\"${BUILD_DIR}\" CONFIGURATION_TEMP_DIR=\"${PROJECT_TEMP_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\" $ACTION\n    xcodebuild -project \"${PROJECT_FILE_PATH}\" -target \"${TARGET_NAME}\" -configuration \"${CONFIGURATION}\" -sdk ${UFW_OTHER_PLATFORM}${UFW_SDK_VERSION} BUILD_DIR=\"${BUILD_DIR}\" CONFIGURATION_TEMP_DIR=\"${PROJECT_TEMP_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\" $ACTION\n    \n    \n    # Build the fat static library binary\n    \n    echo \"Create universal static library\"\n    \nif [[ \"$XCODE_VERSION_MAJOR\" = \"0500\" ]]\nthen\necho \"$DT_TOOLCHAIN_DIR/usr/bin/libtool\" -static \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" -o \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}.temp\"\n\"$DT_TOOLCHAIN_DIR/usr/bin/libtool\" -static \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" -o \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}.temp\"\nelse\necho \"$PLATFORM_DEVELOPER_BIN_DIR/libtool\" -static \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" -o \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}.temp\"\n\"$PLATFORM_DEVELOPER_BIN_DIR/libtool\" -static \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" -o \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}.temp\"\nfi\n\n    echo mv \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}.temp\" \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\"\n    mv \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}.temp\" \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\"\nfi\n\n# Build embedded framework structure\n\necho \"Build Embedded Framework\"\n\necho rm -rf \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework\"\nrm -rf \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework\"\necho mkdir -p \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/Resources\"\nmkdir -p \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/Resources\"\necho cp -a \"${BUILT_PRODUCTS_DIR}/${WRAPPER_NAME}\" \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/\"\ncp -a \"${BUILT_PRODUCTS_DIR}/${WRAPPER_NAME}\" \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/\"\n\ndeclare -a UFW_FILE_LIST\nlist_files \"${BUILT_PRODUCTS_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}\" UFW_FILE_LIST\nfor filename in \"${UFW_FILE_LIST[@]}\"\ndo\n    if [[ \"${filename}\" != \"Info.plist\" ]] && [[ ! \"${filename}\" =~ .*\\.lproj$ ]]\n    then\n        echo ln -sfh \"../${WRAPPER_NAME}/Resources/${filename}\" \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/Resources/${filename}\"\n        ln -sfh \"../${WRAPPER_NAME}/Resources/${filename}\" \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/Resources/${filename}\"\n    fi\ndone\n\n\nif [ \"${ONLY_ACTIVE_PLATFORM}\" != \"YES\" ]\nthen\n    # Replace other platform's framework with a copy of this one (so that both have the same universal binary)\n    \n    echo \"Copy from $UFW_SDK_PLATFORM to $UFW_OTHER_PLATFORM\"\n    \n    echo rm -rf \"${BUILD_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\"\n    rm -rf \"${BUILD_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\"\n    echo cp -a \"${BUILD_DIR}/${CONFIGURATION}-${UFW_SDK_PLATFORM}\" \"${BUILD_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\"\n    cp -a \"${BUILD_DIR}/${CONFIGURATION}-${UFW_SDK_PLATFORM}\" \"${BUILD_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\"\nfi\n";
		};
/* End PBXShellScriptBuildPhase section */

/* Begin PBXSourcesBuildPhase section */
		62C1855417574452009095DF /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				62C1858917574491009095DF /* logging_mosq.c in Sources */,
				62C1858B17574491009095DF /* memory_mosq.c in Sources */,
				62C1858D17574491009095DF /* messages_mosq.c in Sources */,
				62C1859017574491009095DF /* mosquitto.c in Sources */,
				62C1859317574491009095DF /* net_mosq.c in Sources */,
				62C1859517574491009095DF /* read_handle_client.c in Sources */,
				62C1859617574491009095DF /* read_handle_shared.c in Sources */,
				62C1859717574491009095DF /* read_handle.c in Sources */,
				62C1859917574491009095DF /* send_client_mosq.c in Sources */,
				62C1859A17574491009095DF /* send_mosq.c in Sources */,
				62C1859C17574491009095DF /* thread_mosq.c in Sources */,
				01483E0C18DC616800F3C298 /* srv_mosq.c in Sources */,
				62C1859D17574491009095DF /* time_mosq.c in Sources */,
				01483E0D18DC616800F3C298 /* tls_mosq.c in Sources */,
				62C1859F17574491009095DF /* util_mosq.c in Sources */,
				62C185A117574491009095DF /* will_mosq.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXVariantGroup section */
		62C1856317574452009095DF /* InfoPlist.strings */ = {
			isa = PBXVariantGroup;
			children = (
				62C1856417574452009095DF /* en */,
			);
			name = InfoPlist.strings;
			sourceTree = "<group>";
		};
/* End PBXVariantGroup section */

/* Begin XCBuildConfiguration section */
		62C1856717574452009095DF /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = NO;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				GCC_WARN_ABOUT_RETURN_TYPE = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				IPHONEOS_DEPLOYMENT_TARGET = 5.0;
				ONLY_ACTIVE_ARCH = NO;
				SDKROOT = iphoneos;
			};
			name = Debug;
		};
		62C1856817574452009095DF /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = YES;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_WARN_ABOUT_RETURN_TYPE = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				IPHONEOS_DEPLOYMENT_TARGET = 5.0;
				ONLY_ACTIVE_ARCH = NO;
				SDKROOT = iphoneos;
				VALIDATE_PRODUCT = YES;
			};
			name = Release;
		};
		62C1856A17574452009095DF /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				FRAMEWORK_SEARCH_PATHS = "";
				FRAMEWORK_VERSION = A;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = "Mosquitto-Prefix.pch";
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include,
					"/Users/nick/Downloads/njh-mosquitto-66f4ba77088b/xcode/include",
				);
				INFOPLIST_FILE = "Mosquitto-Info.plist";
				LIBRARY_SEARCH_PATHS = (
					"$(inherited)",
					"$(PROJECT_DIR)",
				);
				PRODUCT_NAME = Mosquitto;
				SKIP_INSTALL = YES;
				WRAPPER_EXTENSION = framework;
			};
			name = Debug;
		};
		62C1856B17574452009095DF /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				FRAMEWORK_SEARCH_PATHS = "";
				FRAMEWORK_VERSION = A;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = "Mosquitto-Prefix.pch";
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include,
					"/Users/nick/Downloads/njh-mosquitto-66f4ba77088b/xcode/include",
				);
				INFOPLIST_FILE = "Mosquitto-Info.plist";
				LIBRARY_SEARCH_PATHS = (
					"$(inherited)",
					"$(PROJECT_DIR)",
				);
				PRODUCT_NAME = Mosquitto;
				SKIP_INSTALL = YES;
				WRAPPER_EXTENSION = framework;
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		62C1855217574452009095DF /* Build configuration list for PBXProject "Mosquitto" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				62C1856717574452009095DF /* Debug */,
				62C1856817574452009095DF /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		62C1856917574452009095DF /* Build configuration list for PBXNativeTarget "Mosquitto" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				62C1856A17574452009095DF /* Debug */,
				62C1856B17574452009095DF /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = 62C1854F17574452009095DF /* Project object */;
}
